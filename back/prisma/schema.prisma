datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["views"]
}

model Contact {
  id        Int        @id @default(autoincrement())
  name      String
  email     String     @unique
  phone     String
  providers Provider[] // One-to-many relation between Contact and Provider
}

model Provider {
  id        Int       @id @default(autoincrement())
  name      String
  cnpj      String    @unique
  contact   Contact   @relation(fields: [contactId], references: [id])
  contactId Int
  Product   Product[]
}

model Employee {
  id         Int        @id @default(autoincrement())
  hireDate   DateTime
  job        String
  name       String
  deliveries Delivery[]
}

model Delivery {
  id         Int      @id @default(autoincrement())
  date       DateTime
  quantity   Int
  product    Product  @relation(fields: [productId], references: [id])
  productId  Int
  employee   Employee @relation(fields: [employeeId], references: [id])
  employeeId Int
}

model Customer {
  id      Int    @id @default(autoincrement())
  name    String
  address String
  cpf     String
  sales   Sale[]
}

model Sale {
  id           Int           @id @default(autoincrement())
  date         DateTime
  customer     Customer      @relation(fields: [customerId], references: [id])
  customerId   Int
  saleProducts SaleProduct[]
}

model SaleProduct {
  id        Int     @id @default(autoincrement())
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  amount    Int
  price     Float
  sale      Sale    @relation(fields: [saleId], references: [id])
  saleId    Int
}

model Product {
  id                Int               @id @default(autoincrement())
  image             Bytes?
  name              String
  amountInStock     Int
  suggestedPrice    Float
  provider          Provider          @relation(fields: [providerId], references: [id])
  providerId        Int
  productCategories ProductCategory[]
  deliveries        Delivery[]
  saleProducts      SaleProduct[]

  @@map("Product")
}

model ProductCategory {
  product    Product  @relation(fields: [productId], references: [id])
  productId  Int
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int

  @@id([productId, categoryId])
  @@map("ProductCategory")
}

model Category {
  id              Int               @id @default(autoincrement())
  name            String            @unique
  productCategory ProductCategory[]

  @@map("Category")
}

view SaleSummary {
  sale_id          Int
  sale_date        DateTime
  customer_id      Int
  customer_name    String
  product_id       Int
  product_name     String
  product_amount   Int
  product_price    Float
  total_sale_price Float

  @@id([sale_id, product_id])
}
